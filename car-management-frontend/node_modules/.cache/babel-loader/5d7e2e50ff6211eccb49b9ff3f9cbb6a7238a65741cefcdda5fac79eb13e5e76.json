{"ast":null,"code":"import React,{useState}from'react';import API from'../api';import Navbar from'../components/Navbar';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CarCreatePage=()=>{const[form,setForm]=useState({title:'',description:'',tags:{car_type:'',company:'',dealer:''},images:[]});const[imageFiles,setImageFiles]=useState([]);const navigate=useNavigate();const handleInputChange=e=>{const{name,value}=e.target;setForm({...form,[name]:value});};const handleTagChange=e=>{const{name,value}=e.target;setForm({...form,tags:{...form.tags,[name]:value}});};const handleImageChange=e=>{const files=Array.from(e.target.files);if(files.length>10){alert('You can only upload up to 10 images.');return;}setImageFiles(files);};const handleSubmit=async e=>{e.preventDefault();const formData=new FormData();formData.append('title',form.title);formData.append('description',form.description);Object.entries(form.tags).forEach(_ref=>{let[key,value]=_ref;formData.append(`tags[${key}]`,value);});imageFiles.forEach(file=>{formData.append('images',file);});try{await API.post('/cars',formData,{headers:{'Content-Type':'multipart/form-data'}});alert('Car added successfully!');navigate('/');}catch(err){var _err$response,_err$response$data;alert(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Error adding car.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"h1\",{children:\"Add a New Car\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,encType:\"multipart/form-data\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",placeholder:\"Title\",value:form.title,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",placeholder:\"Description\",value:form.description,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"car_type\",placeholder:\"Car Type\",value:form.tags.car_type,onChange:handleTagChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"company\",placeholder:\"Company\",value:form.tags.company,onChange:handleTagChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"dealer\",placeholder:\"Dealer\",value:form.tags.dealer,onChange:handleTagChange}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"images\",accept:\"image/*\",multiple:true,onChange:handleImageChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Car\"})]})]});};export default CarCreatePage;","map":{"version":3,"names":["React","useState","API","Navbar","useNavigate","jsx","_jsx","jsxs","_jsxs","CarCreatePage","form","setForm","title","description","tags","car_type","company","dealer","images","imageFiles","setImageFiles","navigate","handleInputChange","e","name","value","target","handleTagChange","handleImageChange","files","Array","from","length","alert","handleSubmit","preventDefault","formData","FormData","append","Object","entries","forEach","_ref","key","file","post","headers","err","_err$response","_err$response$data","response","data","message","children","onSubmit","encType","type","placeholder","onChange","required","accept","multiple"],"sources":["C:/Users/anura/assignment-/car-management-frontend/src/pages/CarCreatePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport API from '../api';\r\nimport Navbar from '../components/Navbar';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CarCreatePage = () => {\r\n  const [form, setForm] = useState({\r\n    title: '',\r\n    description: '',\r\n    tags: { car_type: '', company: '', dealer: '' },\r\n    images: [],\r\n  });\r\n  const [imageFiles, setImageFiles] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n  const handleTagChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, tags: { ...form.tags, [name]: value } });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const files = Array.from(e.target.files);\r\n    if (files.length > 10) {\r\n      alert('You can only upload up to 10 images.');\r\n      return;\r\n    }\r\n    setImageFiles(files);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('title', form.title);\r\n    formData.append('description', form.description);\r\n    Object.entries(form.tags).forEach(([key, value]) => {\r\n      formData.append(`tags[${key}]`, value);\r\n    });\r\n    imageFiles.forEach((file) => {\r\n      formData.append('images', file);\r\n    });\r\n\r\n    try {\r\n      await API.post('/cars', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      alert('Car added successfully!');\r\n      navigate('/');\r\n    } catch (err) {\r\n      alert(err.response?.data?.message || 'Error adding car.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <h1>Add a New Car</h1>\r\n      <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={form.title}\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={form.description}\r\n          onChange={handleInputChange}\r\n          required\r\n        ></textarea>\r\n        <input\r\n          type=\"text\"\r\n          name=\"car_type\"\r\n          placeholder=\"Car Type\"\r\n          value={form.tags.car_type}\r\n          onChange={handleTagChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"company\"\r\n          placeholder=\"Company\"\r\n          value={form.tags.company}\r\n          onChange={handleTagChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"dealer\"\r\n          placeholder=\"Dealer\"\r\n          value={form.tags.dealer}\r\n          onChange={handleTagChange}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          name=\"images\"\r\n          accept=\"image/*\"\r\n          multiple\r\n          onChange={handleImageChange}\r\n        />\r\n        <button type=\"submit\">Add Car</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CarCreatePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}